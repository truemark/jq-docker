name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Run at 2PM UTC every Monday
    - cron: '0 14 * * 1'

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Keepalive
        uses: gautamkrishnar/keepalive-workflow@v1
      - name: Get Version
        id: version
        run: |
          export JQ_VERSION=$(curl -sSL https://api.github.com/repos/stedolan/jq/tags | jq -r "[.[].name] | .[0] | sub(\"jq-\";\"\")")
          echo "JQ_VERSION=${JQ_VERSION}" >> $GITHUB_ENV
          echo "Version: ${JQ_VERSION}"
          export TAG_EXISTS=$( curl -sSL https://api.github.com/repos/truemark/jq-docker/tags | jq -r "[.[].name] | index(\"${JQ_VERSION}\") != null")
          echo "TAG_EXISTS=${TAG_EXISTS}" >> $GITHUB_ENV
          echo "Exists: ${TAG_EXISTS}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_ASSUME_ROLE }}"
          aws-region: "us-east-1"
      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Setup Buildx Remote Docker
        id: buildx
        uses: truemark/aws-buildx-remote-docker-instance-action@v4
        with:
          security-group-id: "${{ vars.SECURITY_GROUP_ID }}"
          subnet-id: "${{ vars.SUBNET_ID }}"
          instance-profile: "${{ vars.INSTANCE_PROFILE }}"
          region: "us-east-2"
      - name: Build
        if: ${{ env.TAG_EXISTS != 'true' }}
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg JQ_VERSION="${{ env.JQ_VERSION }}" \
            -f Dockerfile \
            -t truemark/jq:${{ env.JQ_VERSION}} \
            -t truemark/jq:latest \
            .
      - name: Package
        if: ${{ env.TAG_EXISTS != 'true' }}
        run: |
          IMAGE="truemark/jq:${{ env.JQ_VERSION }}" ARCH="amd64" FILE="jq-linux-amd64" ./getlayer.sh
          IMAGE="truemark/jq:${{ env.JQ_VERSION }}" ARCH="arm64" FILE="jq-linux-arm64" ./getlayer.sh
      - name: Upload artifacts
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: files
          path: |
            jq-*
      - name: Upload binaries to release
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: |
            jq-*
          release_name: ${{env.JQ_VERSION}}
          tag: ${{env.JQ_VERSION}}
          overwrite: true
